<#
.SYNOPSIS
    Configure un namespace DFS, ajoute les cibles, et met en place la r√©plication DFS-R entre plusieurs serveurs.

.DESCRIPTION
    Ce script cr√©e :
    - Un namespace DFS domaine
    - Des dossiers cibles (folder targets) pour chaque partage
    - Des groupes de r√©plication DFS-R
    - Les membres, connexions et chemins locaux pour la r√©plication

.PARAMETER Servers
    Liste des serveurs h√©bergeant les partages DFS

.PARAMETER DomainNamespace
    Chemin DFS du namespace (ex : \\domain.local\Partages)

.PARAMETER Shares
    Liste des noms de partages DFS (et dossiers) √† configurer

.PARAMETER LocalPathRoot
    Racine locale des dossiers partag√©s sur chaque serveur (ex : E:\Partages)

.EXAMPLE
    .\Setup-DfsStructure.ps1 -Servers @("FS01", "FS02") -DomainNamespace "\\domain.local\Partages" -Shares @("RH", "IT") -LocalPathRoot "D:\Shares"

.NOTES
    Auteur : Ton Nom
    GitHub : https://github.com/ton-compte/Setup-DfsStructure
#>

param (
    [Parameter(Mandatory = $true)]
    [string[]]$Servers,

    [Parameter(Mandatory = $true)]
    [string]$DomainNamespace,

    [Parameter(Mandatory = $true)]
    [string[]]$Shares,

    [Parameter(Mandatory = $true)]
    [string]$LocalPathRoot
)

# 1. Cr√©er le namespace DFS
Write-Host "üõ†Ô∏è Cr√©ation du namespace DFS domaine $DomainNamespace ..."
try {
    New-DfsNamespace -Name ($DomainNamespace.Split('\')[-1]) -Path $DomainNamespace -Type DomainV2 -ErrorAction Stop
    Write-Host "‚úÖ Namespace DFS cr√©√©."
} catch {
    Write-Warning "‚ö†Ô∏è Namespace DFS d√©j√† existant ou erreur : $_"
}

# 2. Ajouter les cibles dans le namespace
foreach ($share in $Shares) {
    $folderPath = "$DomainNamespace\$share"
    Write-Host "`nüìÅ Traitement du partage DFS : $folderPath"

    foreach ($server in $Servers) {
        $targetPath = "\\$server\PARTAGE_$share"
        try {
            $existingTargets = Get-DfsnFolderTarget -Path $folderPath -ErrorAction SilentlyContinue
            if ($existingTargets -and $existingTargets.TargetPath -contains $targetPath) {
                Write-Host "   ‚ûñ Cible d√©j√† pr√©sente : $targetPath"
            } else {
                Add-DfsnFolderTarget -Path $folderPath -TargetPath $targetPath -ErrorAction Stop
                Write-Host "   ‚úÖ Cible ajout√©e : $targetPath"
            }
        } catch {
            Write-Warning "   ‚ùå Erreur ajout cible $targetPath : $_"
        }
    }
}

# 3. Configurer la r√©plication DFS-R
foreach ($share in $Shares) {
    $rgName = "RG_$share"
    Write-Host "`nüîÑ Configuration DFS-R pour $share (groupe $rgName)"

    # Cr√©er le groupe
    try {
        New-DfsReplicationGroup -GroupName $rgName -ErrorAction Stop
        Write-Host "   ‚úÖ Groupe DFS-R $rgName cr√©√©."
    } catch {
        Write-Warning "   ‚ö†Ô∏è Groupe $rgName d√©j√† existant ou erreur : $_"
    }

    # Ajouter les membres
    foreach ($server in $Servers) {
        try {
            Add-DfsrMember -GroupName $rgName -ComputerName $server -ErrorAction Stop
            Write-Host "   ‚ûï $server ajout√© √† $rgName"
        } catch {
            Write-Warning "   ‚ö†Ô∏è $server d√©j√† membre ou erreur : $_"
        }
    }

    # Cr√©er le dossier r√©pliqu√©
    try {
        New-DfsReplicatedFolder -GroupName $rgName -FolderName $share -ErrorAction Stop
        Write-Host "   ‚úÖ Dossier r√©pliqu√© $share cr√©√©"
    } catch {
        Write-Warning "   ‚ö†Ô∏è Dossier $share d√©j√† pr√©sent ou erreur : $_"
    }

    # Ajouter connexions de r√©plication bidirectionnelles
    for ($i = 0; $i -lt $Servers.Count; $i++) {
        for ($j = 0; $j -lt $Servers.Count; $j++) {
            if ($i -ne $j) {
                try {
                    Add-DfsrConnection -GroupName $rgName -SourceComputerName $Servers[$i] -DestinationComputerName $Servers[$j] -ErrorAction Stop
                    Write-Host "   üîÅ Connexion ajout√©e : $($Servers[$i]) ‚ûù $($Servers[$j])"
                } catch {
                    Write-Warning "   ‚ö†Ô∏è Connexion d√©j√† existante ou erreur : $_"
                }
            }
        }
    }

    # Configurer les chemins locaux
    foreach ($server in $Servers) {
        $localPath = Join-Path $LocalPathRoot $share
        try {
            Set-DfsrMembership -GroupName $rgName -FolderName $share -ComputerName $server -LocalPath $localPath -ErrorAction Stop
            Write-Host "   üóÇÔ∏è Chemin local d√©fini : $server ‚ûù $localPath"
        } catch {
            Write-Warning "   ‚ùå Erreur chemin local sur $server : $_"
        }
    }
}

Write-Host "`nüéØ Configuration DFS termin√©e avec succ√®s." -ForegroundColor Green
