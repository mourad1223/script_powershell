<#
.SYNOPSIS
    V√©rifie l'√©tat de r√©plication DFS-R entre deux serveurs (service, backlog, acc√®s UNC, √©v√©nements).

.DESCRIPTION
    Ce script effectue les actions suivantes :
    - V√©rifie que le service DFSR est actif sur chaque serveur
    - V√©rifie le backlog DFSR (fichiers en attente de r√©plication)
    - Teste l‚Äôacc√®s r√©seau aux partages
    - Analyse les √©v√©nements DFSR r√©cents dans les journaux

.PARAMETER SourceServer
    Nom du serveur source DFSR

.PARAMETER DestinationServer
    Nom du serveur destination DFSR

.PARAMETER GroupName
    Nom du groupe de r√©plication DFSR (ex : "GroupeDFSR")

.PARAMETER FolderName
    Nom du dossier DFSR partag√© (ex : "partages")

.EXAMPLE
    .\Check-DfsrReplication.ps1 -SourceServer "fs01" -DestinationServer "fs02" -GroupName "GroupeDFSR" -FolderName "partages"

.NOTES
    Auteur : Ton Nom
    GitHub : https://github.com/ton-compte/Check-DfsrReplication
#>

param(
    [Parameter(Mandatory = $true)]
    [string]$SourceServer,

    [Parameter(Mandatory = $true)]
    [string]$DestinationServer,

    [Parameter(Mandatory = $true)]
    [string]$GroupName,

    [Parameter(Mandatory = $true)]
    [string]$FolderName
)

Write-Host "`nüîß V√©rification DFSR entre $SourceServer ‚Üí $DestinationServer sur '$FolderName' (Groupe : $GroupName)" -ForegroundColor Cyan

function Test-ServiceDFSR {
    param($Server)
    try {
        $svc = Get-Service -ComputerName $Server -Name DFSR -ErrorAction Stop
        if ($svc.Status -ne "Running") {
            Write-Warning "‚ö† Le service DFSR n'est pas actif sur $Server (Status = $($svc.Status))."
            return $false
        }
        Write-Host "‚úÖ Service DFSR OK sur $Server"
        return $true
    } catch {
        Write-Warning "‚ùå Service DFSR introuvable ou erreur sur $Server : $_"
        return $false
    }
}

# V√©rification des services
if (-not (Test-ServiceDFSR $SourceServer) -or -not (Test-ServiceDFSR $DestinationServer)) {
    Write-Warning "‚õî Le service DFSR doit √™tre actif sur les deux serveurs. Arr√™t du script."
    exit
}

# V√©rification backlog DFSR
Write-Host "`nüì¶ V√©rification du backlog DFSR..."
try {
    $backlog = Get-DfsrBack
